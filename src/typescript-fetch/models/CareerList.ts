/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Generator Kotlin Sample
 * OpenAPI Generator を用いた自動生成のサンプルコードです
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CareerList
 */
export interface CareerList {
    /**
     * 作業開始
     * @type {string}
     * @memberof CareerList
     */
    workStart: string;
    /**
     * 作業終了
     * @type {string}
     * @memberof CareerList
     */
    workEnd?: string;
    /**
     * 顧客名
     * @type {string}
     * @memberof CareerList
     */
    customer: string;
    /**
     * 業務名/言語
     * @type {string}
     * @memberof CareerList
     */
    business: string;
    /**
     * 機種・OS
     * @type {string}
     * @memberof CareerList
     */
    oS: string;
    /**
     * 言語
     * @type {string}
     * @memberof CareerList
     */
    language: string;
    /**
     * DB
     * @type {string}
     * @memberof CareerList
     */
    database: string;
    /**
     * 環境
     * @type {string}
     * @memberof CareerList
     */
    environment: string;
    /**
     * 作業行程
     * @type {string}
     * @memberof CareerList
     */
    workProcess: string;
    /**
     * 作業詳細
     * @type {string}
     * @memberof CareerList
     */
    workDetail: string;
    /**
     * グループ内ポジション
     * @type {string}
     * @memberof CareerList
     */
    position: string;
    /**
     * メンバー数
     * @type {string}
     * @memberof CareerList
     */
    memberNum?: string;
}

/**
 * Check if a given object implements the CareerList interface.
 */
export function instanceOfCareerList(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "workStart" in value;
    isInstance = isInstance && "customer" in value;
    isInstance = isInstance && "business" in value;
    isInstance = isInstance && "oS" in value;
    isInstance = isInstance && "language" in value;
    isInstance = isInstance && "database" in value;
    isInstance = isInstance && "environment" in value;
    isInstance = isInstance && "workProcess" in value;
    isInstance = isInstance && "workDetail" in value;
    isInstance = isInstance && "position" in value;

    return isInstance;
}

export function CareerListFromJSON(json: any): CareerList {
    return CareerListFromJSONTyped(json, false);
}

export function CareerListFromJSONTyped(json: any, ignoreDiscriminator: boolean): CareerList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'workStart': json['workStart'],
        'workEnd': !exists(json, 'workEnd') ? undefined : json['workEnd'],
        'customer': json['customer'],
        'business': json['business'],
        'oS': json['OS'],
        'language': json['language'],
        'database': json['database'],
        'environment': json['environment'],
        'workProcess': json['workProcess'],
        'workDetail': json['workDetail'],
        'position': json['position'],
        'memberNum': !exists(json, 'memberNum') ? undefined : json['memberNum'],
    };
}

export function CareerListToJSON(value?: CareerList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'workStart': value.workStart,
        'workEnd': value.workEnd,
        'customer': value.customer,
        'business': value.business,
        'OS': value.oS,
        'language': value.language,
        'database': value.database,
        'environment': value.environment,
        'workProcess': value.workProcess,
        'workDetail': value.workDetail,
        'position': value.position,
        'memberNum': value.memberNum,
    };
}

