/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI Generator Kotlin Sample
 * OpenAPI Generator を用いた自動生成のサンプルコードです
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Customers,
  CustomersTorokuParam,
} from '../models';
import {
    CustomersFromJSON,
    CustomersToJSON,
    CustomersTorokuParamFromJSON,
    CustomersTorokuParamToJSON,
} from '../models';

export interface CustomersGetRequest {
    petId: string;
}

export interface CustomersPostRequest {
    customersTorokuParam?: CustomersTorokuParam;
}

/**
 * 
 */
export class CustomerApi extends runtime.BaseAPI {

    /**
     * DB に登録されているカスタマーを全てCSVダウンロード
     * カスタマーの一覧CSVダウンロード
     */
    async customersDownloadGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // token authentication
        }

        const response = await this.request({
            path: `/customers/download/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * DB に登録されているカスタマーを全てCSVダウンロード
     * カスタマーの一覧CSVダウンロード
     */
    async customersDownloadGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.customersDownloadGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * DB に登録されているカスタマーを全て取得する
     * カスタマーの一覧取得
     */
    async customersGetRaw(requestParameters: CustomersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Customers>> {
        if (requestParameters.petId === null || requestParameters.petId === undefined) {
            throw new runtime.RequiredError('petId','Required parameter requestParameters.petId was null or undefined when calling customersGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.petId !== undefined) {
            queryParameters['petId'] = requestParameters.petId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // token authentication
        }

        const response = await this.request({
            path: `/customers/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomersFromJSON(jsonValue));
    }

    /**
     * DB に登録されているカスタマーを全て取得する
     * カスタマーの一覧取得
     */
    async customersGet(requestParameters: CustomersGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Customers> {
        const response = await this.customersGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * DB に登録されているカスタマーを全て取得する
     * カスタマーの一覧取得
     */
    async customersPostRaw(requestParameters: CustomersPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Customers>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/customers/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CustomersTorokuParamToJSON(requestParameters.customersTorokuParam),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomersFromJSON(jsonValue));
    }

    /**
     * DB に登録されているカスタマーを全て取得する
     * カスタマーの一覧取得
     */
    async customersPost(requestParameters: CustomersPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Customers> {
        const response = await this.customersPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
